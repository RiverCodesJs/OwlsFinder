// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                  @id @default(autoincrement())
  names            String
  paternalSurname  String
  maternalSurname  String
  email            String               @unique
  password         String?
  enrollmentId     Int?                 @unique
  groups           String[]
  beforeGroup      Int?
  nextGroup        Int?
  clubId           Int?
  isAdmin          Boolean
  isCounselor      Boolean
  shift            String?
  permisions       UserPermission[]
  created_at       DateTime             @default(now())
  updated_at       DateTime             @updatedAt
  active           Boolean              @default(true)
}

model Professor {
  id                Int         @id @default(autoincrement())
  name              String
  paternalSurname   String
  maternalSurname   String
  email             String      @unique
  clubs             Club[]
  training          Training[]
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt
  active            Boolean     @default(true)
}

model Package {
  id                Int         @id @default(autoincrement())
  name              String
  description       String
  images            String[]
  videos            String[]
  limit             Int
  subjects          Subject[]  
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  active            Boolean          @default(true)
}

model Subject {
  id                Int              @id @default(autoincrement())
  name              String
  description       String
  packageId         Int
  package           Package          @relation(fields: [packageId], references: [id])
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  active            Boolean          @default(true)
}

model Training {
  id                Int              @id @default(autoincrement())
  name              String
  description       String
  images            String[]
  videos            String[]
  shift             String
  limit             Int
  professorId       Int?
  professor         Professor?        @relation(fields: [professorId], references: [id])
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  active            Boolean          @default(true)
}

model Club {
  id                Int              @id @default(autoincrement())
  name              String
  description       String
  images            String[]
  videos            String[]
  limit             Int
  shift             String?
  schedule          String
  professorId       Int
  professor         Professor        @relation(fields: [professorId], references: [id])
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  active            Boolean          @default(true)
}

model Permissions {
  id           Int                   @id @default(autoincrement())
  name         String
  user         UserPermission[]
}

model UserPermission {
  userId       Int
  user         User             @relation(fields: [userId], references: [id])
  permissionId Int
  permission   Permissions      @relation(fields: [permissionId], references: [id])
  assignedAt   DateTime         @default(now())
  @@id([userId, permissionId])
}
